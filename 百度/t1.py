#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author  : wushaohong
'''
题目描述：
宝箱怪是游戏中常见的一种怪物，它们伪装成普通的宝箱，并在被玩家打开时攻击玩家。
假设你操控的游戏角色身处一个放着N个宝箱的房间，
每个宝箱或者是普通的宝箱，或者是宝箱怪。每个宝箱上都贴着一张字条，字条上写着以下两种信息中的一种：
①第x个宝箱是普通宝箱；
②第x个宝箱是宝箱怪。
其中普通宝箱上的信息一定是真的，而宝箱怪上的信息可能是假的，那么根据这些信息，
有多少个宝箱一定是普通宝箱，又有多少个宝箱一定是宝箱怪？

输入
第一行包含一个整数N，1≤N≤105。
接下来N行，第i行包含两个整数t和x，1≤t≤2，1≤x≤N。若t=1，
则第i个宝箱上的信息为：第x个宝箱是普通宝箱；若t=2，则第i个宝箱上的信息为：第x个宝箱是宝箱怪。
输出
输出两个以空格隔开的整数，第一个整数表示可以确定为普通宝箱的宝箱数量，第二个整数表示可以确定为宝箱怪的宝箱数量。

样例输入
3
1 2
2 1
1 3
样例输出
0 1

Hint
每个宝箱都可能是宝箱怪，其中第一个宝箱一定是宝箱怪。
'''


def find(n, nums):
    guai = sum([1 for x in nums[:][0] if x == 2])
    if nums[0][0] != 2:
        guai += 1
    print(0, guai)


if __name__ == '__main__':
    n = int(input())
    nums = []
    for i in range(n):
        a = [int(x) for x in input().split()]
        nums.append(a)
    nums = sorted(nums, key=lambda x: x[1])
    find(n, nums)
